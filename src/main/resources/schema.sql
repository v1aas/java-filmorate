DROP TABLE IF EXISTS PUBLIC.FILMS CASCADE;

DROP TABLE IF EXISTS PUBLIC.FRIENDSHIP CASCADE;

DROP TABLE IF EXISTS PUBLIC.GENRE CASCADE;

DROP TABLE IF EXISTS PUBLIC.GENRE_NAME CASCADE;

DROP TABLE IF EXISTS PUBLIC.LIKES CASCADE;

DROP TABLE IF EXISTS PUBLIC.RATING_NAME CASCADE;

DROP TABLE IF EXISTS PUBLIC.STATUS CASCADE;

DROP TABLE IF EXISTS PUBLIC.USERS CASCADE;

CREATE TABLE public.rating_name (
	rating_id integer NOT NULL,
	rating_name varchar NOT NULL,
	CONSTRAINT rating_name_pk PRIMARY KEY (rating_id)
);
CREATE TABLE public.films (
	film_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	film_name varchar NOT NULL,
	description varchar NULL,
	duration integer NOT NULL,
	release_date timestamp NOT NULL,
	rating_id integer NULL,
	rate integer NULL,
	CONSTRAINT films_pk PRIMARY KEY (film_id),
	CONSTRAINT films_fk FOREIGN KEY (RATING_ID) REFERENCES PUBLIC.RATING_NAME(RATING_ID)
);
CREATE TABLE public.genre_name (
	genre_id integer NOT NULL,
	genre_name varchar NOT NULL,
	CONSTRAINT genre_name_pk PRIMARY KEY (genre_id)
);
CREATE TABLE public.genre (
	film_id integer NULL,
	genre_id integer NULL,
	CONSTRAINT genre_fk FOREIGN KEY (film_id) REFERENCES public.films(film_id),
	CONSTRAINT genre_fk_1 FOREIGN KEY (genre_id) REFERENCES public.genre_name(genre_id)
);
-- Добавление жанров
INSERT INTO public.genre_name (genre_id, genre_name)
	VALUES (1,'Комедия'),(2,'Драма'), (3,'Мультфильм'), (4,'Триллер'), (5,'Документальный'), (6,'Боевик');

-- Добавление рейтингов
INSERT INTO public.rating_name (rating_id, rating_name)
	VALUES (1,'G'), (2,'PG'), (3,'PG-13'), (4,'R'), (5,'NC-17');

-- Добавление фильмов
--INSERT INTO PUBLIC.FILMS (film_name,DESCRIPTION,RELEASE_DATE,DURATION)
	--VALUES ('Ocean','Ocean is deep','2022-05-12',124), ('The earth', 'The Earth is circle', '1999-12-1', 60);

CREATE TABLE public.users (
	user_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	email varchar NOT NULL,
	login varchar NOT NULL,
	user_name varchar NULL,
	birthday timestamp NOT NULL,
	CONSTRAINT users_pk PRIMARY KEY (user_id)
);

CREATE TABLE public.likes (
	user_id integer NULL,
	film_id integer NULL,
	CONSTRAINT likes_fk FOREIGN KEY (film_id) REFERENCES public.films(film_id),
	CONSTRAINT likes_fk_1 FOREIGN KEY (user_id) REFERENCES public.users(user_id)
);

CREATE TABLE public.status (
	status_id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY,
	status varchar NOT NULL,
	CONSTRAINT status_pk PRIMARY KEY (status_id)
);

CREATE TABLE public.friendship (
	user_id integer NULL,
	friend_id integer NULL,
	status_id integer NULL,
	CONSTRAINT friendship_fk FOREIGN KEY (user_id) REFERENCES public.users(user_id),
	CONSTRAINT friendship_fk_1 FOREIGN KEY (status_id) REFERENCES public.status(status_id)
);

-- Добавление статусов дружбы
INSERT INTO public.status (status)
	VALUES ('Не подтверждена');
INSERT INTO public.status (status)
	VALUES ('Подтверждена');